; =================== define non-configurable parameters ===============
(define thick_sensor_total 150)
(define width_sensor_total 220)
(define nstrips 5)
(define nlayers 4)
(define pitch 55)
(define tempstring1 " ")
(define tempstring2 " ")
(define tempstring3 " ")
(define tempstring4 " ")
(define tempstring5 " ")
(define tempstring6 " ")
(define tempstring7 " ")
(define tempstring8 " ")
(define temp1 " ")
(define temp2 " ")
(define temp3 " ")
(define temp4 " ")
(define temp5 " ")
(define temp6 " ")
(define temp7 " ")
(define temp8 " ")
(define strip_width 20)
(define elec_width 28)
(define surf_imp_width 20)
(define refine_max_si_x 10)
(define refine_max_si_y 10)
(define refine_min_si_x 0.1)
(define refine_min_si_y 0.1)
(define refine_max_sio2_x 1)
(define refine_max_sio2_y 1)
(define refine_min_sio2_x 1e-1)
(define refine_min_sio2_y 1e-1)
(define refine_max_strips_x 5)
(define refine_max_strips_y 5)
(define refine_min_strips_x 1e-1)
(define refine_min_strips_y 1e-1)
; =================== define swb-configurable parameters ===============
(define imp_concentration @imp_concentration@)
(define imp_width @imp_width@)
(define imp_dist_z @imp_dist_z@)
(define z0 @z0@)
(define imp_depth_z @imp_depth_z@)
; =================== derived parameters ===============
(define half_strip_width (/ strip_width 2))
(define half_elec_width (/ elec_width 2))
(define half_imp_width (/ imp_width 2))
(define middle (/ width_sensor_total 2))
(define half_pitch (/ pitch 2))
(define middle_2l (- middle pitch ))
(define middle_1l (- middle half_pitch))
(define middle_1r (+ middle half_pitch))
(define middle_2r (+ middle pitch ))
(define nimps 2)
(define spray_l (- pitch strip_width))
(define Rspray_l (- spray_l 2))
(display "nimps: ")
(display nimps)

; =================== draw geometry, exit if needbe ====================

(sdegeo:create-polygon
	(list (position 0 0 0)
	       (position half_elec_width 0 0)
	       (position half_elec_width 0.4 0)
	       (position half_strip_width 0.4 0)
	       (position half_strip_width 1 0)
	       (position 0 1 0)
	       (position 0 0 0)
	)
"Aluminum" "elec1"
)


(sdegeo:create-polygon
	(list (position width_sensor_total 0 0)
	       (position (- width_sensor_total half_elec_width ) 0 0)
	       (position (- width_sensor_total half_elec_width ) 0.4 0)
	       (position (- width_sensor_total half_strip_width ) 0.4 0)	     
	       (position (- width_sensor_total half_strip_width ) 1 0)
	       (position width_sensor_total 1 0)
	       (position width_sensor_total 0 0)
	)
"Aluminum" "elec5"
)

(do ((i 1 (+ i 1))) ((= i (- nstrips 1)))
	(begin
		(display i)
			(sdegeo:create-polygon
			(list        
					(position (- (* i pitch) half_elec_width ) 0 0)
	       				(position (+ (* i pitch) half_elec_width ) 0 0)
	       				(position (+ (* i pitch) half_elec_width ) 0.4 0)
	       				(position (+ (* i pitch) half_strip_width ) 0.4 0)	     
	       				(position (+ (* i pitch) half_strip_width ) 1 0)
					(position (- (* i pitch) half_strip_width ) 1 0)
					(position (- (* i pitch) half_strip_width ) 0.4 0)
					(position (- (* i pitch) half_elec_width ) 0.4 0)
	       				(position (- (* i pitch) half_elec_width ) 0 0)	       				
					)
			"Aluminum" "elec_"
			)

	)
)

(do ((i 0 (+ i 1))) ((= i (- nstrips 1) ))
	(begin
		(display i)
			(sdegeo:create-rectangle
				       
					(position (+ half_strip_width (+ (* i (- pitch strip_width)) (* i strip_width))) 0.4 0)
					(position (+ half_strip_width (+ (*(+ i 1) (- pitch strip_width)) (* i strip_width))) 1 0)
				
				"SiO2" "oxide"
				)
	)
)


(sdegeo:create-rectangle (position  0   1 0) (position width_sensor_total (+ z0 (* 2 imp_dist_z)) 0) "Silicon" "epi")
(sdegeo:create-rectangle (position  0   (+ z0 (* 2 imp_dist_z)) 0) (position width_sensor_total (+ thick_sensor_total 1) 0) "Silicon" "p-bulk")
(sdegeo:create-rectangle (position  0  (+ thick_sensor_total 1) 0) (position  width_sensor_total (+ thick_sensor_total 2) 0) "Aluminum" "backplane")

(sdegeo:insert-vertex (position     2 1 0))
(sdegeo:insert-vertex (position    half_strip_width 1 0))
(sdegeo:insert-vertex (position    (+ half_strip_width spray_l) 1 0))
(sdegeo:insert-vertex (position    (+ (+ half_strip_width spray_l) strip_width) 1 0))
(sdegeo:insert-vertex (position    (+ (+ half_strip_width (* 2 spray_l)) strip_width)  1 0))
(sdegeo:insert-vertex (position    (+ (+ half_strip_width (* 2 spray_l)) (* 2 strip_width)) 1 0))
(sdegeo:insert-vertex (position    (+ (+ half_strip_width (* 3 spray_l)) (* 2 strip_width)) 1 0))
(sdegeo:insert-vertex (position    (+ (+ half_strip_width (* 3 spray_l)) (* 3 strip_width))   1 0))
(sdegeo:insert-vertex (position    (- width_sensor_total half_strip_width) 1 0))
(sdegeo:insert-vertex (position  (- width_sensor_total 2) 1 0))

(sdegeo:insert-vertex (position     2 2 0))
(sdegeo:insert-vertex (position    half_strip_width 2 0))
(sdegeo:insert-vertex (position    (+ half_strip_width spray_l) 2 0))
(sdegeo:insert-vertex (position    (+ (+ half_strip_width spray_l) strip_width) 2 0))
(sdegeo:insert-vertex (position    (+ (+ half_strip_width (* 2 spray_l)) strip_width)  2 0))
(sdegeo:insert-vertex (position    (+ (+ half_strip_width (* 2 spray_l)) (* 2 strip_width)) 2 0))
(sdegeo:insert-vertex (position    (+ (+ half_strip_width (* 3 spray_l)) (* 2 strip_width)) 2 0))
(sdegeo:insert-vertex (position    (+ (+ half_strip_width (* 3 spray_l)) (* 3 strip_width)) 2 0))
(sdegeo:insert-vertex (position    (- width_sensor_total half_strip_width) 2 0))
(sdegeo:insert-vertex (position  (- width_sensor_total 2) 2 0))


;#----------Define Contacts
(display "define contacts")
(sdegeo:define-contact-set "con_back" 4 (color:rgb 1 1 1 ) "##" )


(sdegeo:define-contact-set "con_str_b1" 4 (color:rgb 1 1 0 ) "##" )
(sdegeo:define-contact-set "con_str_b2" 4 (color:rgb 1 1 0 ) "##" )
(sdegeo:define-contact-set "con_str_b3" 4 (color:rgb 1 1 0 ) "##" )
(sdegeo:define-contact-set "con_str_b4" 4 (color:rgb 1 1 0 ) "##" )
(sdegeo:define-contact-set "con_str_b5" 4 (color:rgb 1 1 0 ) "##" )


;;#----------Define Ref/Eval Windows
; backplane
(display "drowing backplane")
(sdedr:define-refeval-window "dope_p++" "Rectangle" (position  0 (+ thick_sensor_total 1) 0) (position width_sensor_total (+ thick_sensor_total 2) 0))
; p-spray
(display "drowing p-spray")


(do ((i 0 (+ i 1))) ((= i (- nstrips 1) ))
	(begin
		(display i)
				       (set! temp1 "dope_p+_")
				       (set! temp2 (string-append temp1 (number->string i)))
                                                                 (sdedr:define-refeval-window temp2 "Rectangle"
					(position (+ half_strip_width (+ (* i (- pitch strip_width)) (* i strip_width))) 1 0)
					(position (+ half_strip_width (+ (*(+ i 1) (- pitch strip_width)) (* i strip_width))) 1.5 0)
				
				)
	)
)

; n implants
(display "drowing strips")
(sdedr:define-refeval-window "dope_n++1_" "Rectangle" (position 0 1 0) (position half_strip_width 1.1 0))
(sdedr:define-refeval-window "dope_n++2_" "Rectangle" (position (- width_sensor_total half_strip_width) 1 0) (position width_sensor_total 1.1 0))

(do ((i 1 (+ i 1))) ((= i (- nstrips 1)))
	(begin
		(display i)
		(set! tempstring1 "dope_n++_")
		(set! tempstring2 (string-append tempstring1 (number->string i)))
		(sdedr:define-refeval-window tempstring2 "Rectangle" (position  (+ (+ half_strip_width spray_l) (- (+  half_strip_width  (* (- i 1) pitch)) (/ strip_width 2)))  1 0) (position  (+ (+ half_strip_width spray_l) (+ (+  half_strip_width (* (- i 1) pitch)) (/ strip_width 2)))  1.1 0))
	)
)



;;#----------Set Contacts
(sdegeo:set-current-contact-set "con_back")
(sdegeo:define-2d-contact (list (car (find-edge-id (position middle    (+ thick_sensor_total 2)  0)))) "con_back")

(sdegeo:set-current-contact-set "con_str_b1")
(sdegeo:define-2d-contact (list (car (find-edge-id (position (/ half_strip_width 2) 1 0)))) "con_str_b1")
(sdegeo:set-current-contact-set "con_str_b2")
(sdegeo:define-2d-contact (list (car (find-edge-id (position pitch 1 0)))) "con_str_b2")
(sdegeo:set-current-contact-set "con_str_b3")
(sdegeo:define-2d-contact (list (car (find-edge-id (position (* pitch 2) 1 0)))) "con_str_b3")
(sdegeo:set-current-contact-set "con_str_b4")
(sdegeo:define-2d-contact (list (car (find-edge-id (position (* pitch 3) 1 0)))) "con_str_b4")
(sdegeo:set-current-contact-set "con_str_b5")
(sdegeo:define-2d-contact (list (car (find-edge-id (position (- (* pitch 4) (/ half_strip_width 2)) 1 0)))) "con_str_b5")



;;#----------Define Doping Concentrations
;;#----------Constant Doping Profiles
(sdedr:define-constant-profile "ConstantProfileDefinition_1" "BoronActiveConcentration" 5e12)
(sdedr:define-constant-profile-region "ConstantProfilePlacement_1" "ConstantProfileDefinition_1" "p-bulk")

(sdedr:define-constant-profile "ConstantProfileDefinition_2" "BoronActiveConcentration" 3e13)
(sdedr:define-constant-profile-region "ConstantProfilePlacement_2" "ConstantProfileDefinition_2" "epi")

(sdedr:define-erf-profile "AnalyticalProfilePlacement_8" "PhosphorusActiveConcentration" "SymPos" 0.1  "MaxVal" 1e19 "ValueAtDepth" 1e12 "Depth" 0.5 "Gauss"  "Factor" 0.8)
(sdedr:define-analytical-profile-placement "AnalyticalProfileDefinition_8" "AnalyticalProfilePlacement_8" "dope_n++1_" "Both" "NoReplace" "Eval")

(sdedr:define-erf-profile "AnalyticalProfilePlacement_9" "PhosphorusActiveConcentration" "SymPos" 0.1  "MaxVal" 1e19 "ValueAtDepth" 1e12 "Depth" 0.5 "Gauss"  "Factor" 0.8)
(sdedr:define-analytical-profile-placement "AnalyticalProfileDefinition_9" "AnalyticalProfilePlacement_9" "dope_n++2_" "Both" "NoReplace" "Eval")



(sdedr:define-erf-profile "AnalyticalProfileDefinition_1" "PhosphorusActiveConcentration" "SymPos" 0.1  "MaxVal" 1e19 "ValueAtDepth" 1e12 "Depth" 0.5 "Gauss"  "Factor" 0.8)
(do ((i 1 (+ i 1))) ((= i (+ nstrips 2)))
	(begin
		(display i)
		(set! tempstring1 "dope_n++_")
		(set! tempstring2 (string-append tempstring1 (number->string i)))
		(set! tempstring3 "AnalyticalProfilePlacement_n++_")
		(set! tempstring4 (string-append tempstring3 (number->string i)))
		(sdedr:define-analytical-profile-placement tempstring4 "AnalyticalProfileDefinition_1" tempstring2 "Both" "NoReplace" "Eval")
	)
)

(sdedr:define-erf-profile "AnalyticalProfileDef_1" "BoronActiveConcentration" "SymPos" 0.1  "MaxVal" 1e+16 "ValueAtDepth" 1e+11 "Depth" 0.5 "Gauss"  "Factor" 0.8)
(do ((i 0 (+ i 1))) ((= i (+ nstrips 2)))
	(begin
		(display i)
		(set! temp1 "dope_p+_")
		(set! temp2 (string-append temp1 (number->string i)))
		(set! temp3 "AnalyticalProfilePlacement_p+_")
		(set! temp4 (string-append temp3 (number->string i)))
		(sdedr:define-analytical-profile-placement temp4 "AnalyticalProfileDef_1" temp2 "Both" "NoReplace" "Eval")
	)
)


(sdedr:define-analytical-profile-placement "AnalyticalProfilePlacement_2" "AnalyticalProfileDefinition_2" "dope_p++" "Both" "NoReplace" "Eval")
(sdedr:define-erf-profile "AnalyticalProfileDefinition_2" "BoronActiveConcentration" "SymPos" 0.3  "MaxVal" 5e19 "ValueAtDepth" 1e12 "Depth" 1 "Gauss"  "Factor" 0.8)


;
;;;#----------Refinement Placement
(sdedr:define-refinement-size "RefinementDefinition_1" 2 2 0.01 0.01)
(sdedr:define-refinement-material "RefinementPlacement_1" "RefinementDefinition_1" "Silicon" )
(sdedr:define-refinement-function "RefinementDefinition_1" "DopingConcentration" "MaxTransDiff" 0.01)

; Build Mesh 
;(sde:build-mesh "snmesh" " " "test")
(display "Building mesh...") (newline)
(sdeio:save-tdr-bnd (get-body-list) "n@node@_bnd.tdr")
(sdedr:write-cmd-file "n@node@_msh.cmd")
(system:command "snmesh tdr n@node@_msh")
(sde:build-mesh "snmesh" " " "n@node@_msh")








